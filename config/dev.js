'use strict';

const path = require('path');
const fs = require('fs');
let webpack = require('webpack');
let baseConfig = require('./base');
let defaultSettings = require('./defaults');
const HtmlWebpackPlugin = require('html-webpack-plugin');

// Add needed plugins here

let config = Object.assign({}, baseConfig, {
  entry: ['webpack/hot/dev-server', 'webpack-hot-middleware/client?reload=true', `${defaultSettings.srcPath}/lib/swfobject-2.2`, `${defaultSettings.srcPath}/main`],
  output: {
    libraryTarget: 'umd',
    path: path.resolve(__dirname, '../dist'),
    publicPath: `.${defaultSettings.publicPath}`,
    filename: 'td-sdk.js'
  },
  cache: true,
  devtool: 'eval-source-map',
  plugins: [
    new webpack.HotModuleReplacementPlugin(),
    new webpack.NoErrorsPlugin(),
    new webpack.ProvidePlugin({
      swfobject: 'swfobject'
    }),
    new HtmlWebpackPlugin({
      inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
      templateContent: templateContent() // eslint-disable-line no-use-before-define
    })
  ],
  module: defaultSettings.getDefaultModules()
});

// Add needed loaders to the defaults here
//config.module.loaders.push();

module.exports = config;

function templateContent() {
  var html = fs.readFileSync(path.resolve(process.cwd(), 'dev/playground/index.html')).toString();

  return html;
}
